name: 'Hexo 部署 - 原始流程'
on:
  push:
    branches:    
      - main

jobs:
  buildToGit:
    runs-on: ubuntu-latest
    name: '部署博客：分发'
    env:
      GPG_TTY: $(tty)
      TZ: Asia/Shanghai
    steps:
      - name: '显示服务地址'
        run: |    
          curl cip.cc  
      - name: '同步仓库内容'
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: '设定环境版本'
        uses: actions/setup-node@master
        with:
          node-version: "16.14.0"
      - name: '缓存依赖环境'
        uses: actions/cache@v1
        id: cache
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-     
      - name: '安装依赖环境'
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci          
      - name: '用户密钥配置'
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE }}
        env:
          SSH_PRIVATE: ${{ secrets.SSH_PRIVATE }}
      - name: '用户加密配置'
        uses: crazy-max/ghaction-import-gpg@v4
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE }}
          passphrase: ${{ secrets.GPG_PASSWD }}
          git_user_signingkey: true
          git_commit_gpgsign: true
          git_tag_gpgsign: true
          git_push_gpgsign: true   
      - name: '基础环境配置'
        run: |
          git config --global user.name "inkss"
          git config --global user.email ${{ secrets.EMAIL_SZYINK }}
          git config --global user.signingkey ${{ secrets.GPG_PRIVATE_ID }}
          git config --global commit.gpgsign true
      - name: '配置密文填充'
        uses: microsoft/variable-substitution@v1
        with:
          files: '_tencent.yml, _github.yml'
        env:
          deploy.secretId: ${{secrets.TENCENT_ID}}
          deploy.secretKey: ${{secrets.TENCENT_KEY}}
          deploy.message: '${{ github.event.head_commit.message }}'

      # - name: '部署网站：一 - Tencent CVS'    （弃用）
      #   uses: easingthemes/ssh-deploy@v2
      #   timeout-minutes: 10
      #   continue-on-error: true
      #   env:
      #     SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE }}
      #     ARGS: "-rltgoDzvO --delete"
      #     SOURCE: public/
      #     REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
      #     REMOTE_PORT: ${{ secrets.REMOTE_PORT }}
      #     REMOTE_USER: ${{ secrets.REMOTE_USER }}
      #     TARGET: ${{ secrets.REMOTE_TARGET }}
      
      - name: '部署网站：二 - Tencent COS'
        timeout-minutes: 10
        continue-on-error: true
        run: |
          cat _config.yml >> _tencent.yml
          npm run rebuildTencent
          rm -rf public/fonts
          npm run deployCos
      
      - name: '部署网站：三 - Github Repository'
        timeout-minutes: 5
        continue-on-error: true
        run: | 
          cat _config.yml >> _github.yml
          npm run rebuildGithub
          rm -rf public/fonts
          rm -rf public/img/article
          rm -rf public/img/friend
          npm run deployGitHub
  syncFile:
    runs-on: ubuntu-latest
    needs: buildToGit
    name: '部署博客：同步'
    env:
      GPG_TTY: $(tty)
      TZ: Asia/Shanghai
    steps:
      - name: '同步仓库内容'
        uses: actions/checkout@v2
        with:
          submodules: true     
      - name: '用户密钥配置'
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE }}
        env:
          SSH_PRIVATE: ${{ secrets.SSH_PRIVATE }}
      - name: '用户加密配置'
        uses: crazy-max/ghaction-import-gpg@v4
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE }}
          passphrase: ${{ secrets.GPG_PASSWD }}
          git_user_signingkey: true
          git_commit_gpgsign: true
          git_tag_gpgsign: true
          git_push_gpgsign: true
      - name: '克隆基础仓库'
        run: |
          git config --global user.name "inkss"
          git config --global user.email ${{ secrets.EMAIL_SZYINK }}
          git config --global user.signingkey ${{ secrets.GPG_PRIVATE_ID }}
          git config --global commit.gpgsign true
          git clone git@github.com:inkss/markdown.git ~/markdown
          git clone git@github.com:inkss/inkss-cdn.git ~/inkss-cdn
          git clone git@github.com:inkss/inkss-website.git ~/inkss
          rm -rf ~/markdown/Hexo
          rm -rf ~/inkss-cdn/js
          rm -rf ~/inkss-cdn/css
          rm -rf ~/inkss-cdn/img
          rm -rf ~/inkss-cdn/icon
          rm -rf ~/inkss-cdn/fonts
          mkdir -p ~/markdown/Hexo
          mkdir -p ~/inkss-cdn/js
          mkdir -p ~/inkss-cdn/css
          mkdir -p ~/inkss-cdn/img
          mkdir -p ~/inkss-cdn/icon
          mkdir -p ~/inkss-cdn/fonts
          cp -R ~/work/Hexo-Blog/Hexo-Blog/source/_posts/* ~/markdown/Hexo
          cp -R ~/work/Hexo-Blog/Hexo-Blog/source/img/* ~/inkss-cdn/img
          cp -R ~/work/Hexo-Blog/Hexo-Blog/source/icon/* ~/inkss-cdn/icon
          cp -R ~/work/Hexo-Blog/Hexo-Blog/source/fonts/* ~/inkss-cdn/fonts
          cp -R ~/inkss/js/* ~/inkss-cdn/js
          cp -R ~/inkss/css/* ~/inkss-cdn/css
      - name: '同步文档仓库'
        run: |
          cd ~/markdown
          git status > ~/markdown.txt
          if grep "nothing to commit" ~/markdown.txt
          then
            echo ">>> MARKDOWN: The package is clean~"
          else
            cd ~/markdown
            echo "Auto Sync File"
            git add .
            git commit -m '${{ github.event.head_commit.message }}'
            git push -f
          fi
      - name: '同步加速仓库'
        run: |
          cd ~/inkss-cdn
          git status > ~/inkss-cdn.txt
          if grep "nothing to commit" ~/inkss-cdn.txt
          then
            echo ">>> COMMON: The package is clean~"
          else
            cd ~/inkss-cdn
            echo "Auto Sync File"
            git add .
            git commit -m '${{ github.event.head_commit.message }}'
            git push -f
          fi
  purgeCDN:
    runs-on: ubuntu-latest
    needs: buildToGit
    name: '部署博客：刷新'
    env:
      GPG_TTY: $(tty)
      TZ: Asia/Shanghai
    steps:
      - name: '设定环境版本'
        uses: actions/setup-node@master
        with:
          node-version: "16.14.0"      
      - name: '用户密钥配置'
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE }}
        env:
          SSH_PRIVATE: ${{ secrets.SSH_PRIVATE }}
      - name: '缓存刷新'
        run: |
          git clone git@github.com:inkss/tencent-purge-urls.git ~/tencent-purge-urls
          cd ~/tencent-purge-urls
          npm i
          npm link
          purge-urls -i ${{secrets.TENCENT_ID}} -k ${{secrets.TENCENT_KEY}} -u https://inkss.cn https://static.inkss.cn

          
